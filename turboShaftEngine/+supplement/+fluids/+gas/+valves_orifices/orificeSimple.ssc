component orificeSimple < supplement.fluids.gas.branch
    % Orifice Simple (G) : 1.5
    % This block models the pressure loss due to a constant or variable orifice
    % in a gas network. In the variable option, control member opening fraction
    % is set by the physical signal input L. The orifice is closed when L = 0
    % and fully open when L = 1. Choking occurs when the pressure ratio across
    % the orifice reaches the critical pressure ratio. There is no heat
    % exchange with the environment.

    % Copyright 2017-2022 The MathWorks, Inc.

    parameters (ExternalAccess = modify)
        orifice_area = {1e-4,  'm^2'}; % Orifice area
        Cd           = {0.64,  '1'  }; % Discharge coefficient
        B_lam        = {0.999, '1'  }; % Laminar flow pressure ratio
    end

    annotations
        Icon = 'orifice.svg';
    end

    % Parameter visibility and checks
    equations
        assert(Cd > 0)
        assert(orifice_area > 0)
        assert(orifice_area < area)
        assert(B_lam > 0)
        assert(B_lam < 1)
    end

    % Determine the sonic conductance and critical pressure ratio used in equation
    parameters (Access = private)
        p_unit = {1, 'bar'};
    end

    intermediates (Access = private, ExternalAccess = none)
        % Average quantities
        p_avg   = (p_A   + p_B  )/2;
        T_avg   = (T_A   + T_B  )/2;
        rho_avg = (rho_A + rho_B)/2;

        % Inlet and outlet quantities
        [p_in, p_out, T_in, rho_in, dir] = ...
            if gt(p_A, p_B), ...
                p_A; p_B; T_A; rho_A; 1 ...
            elseif lt(p_A, p_B), ...
                p_B; p_A; T_B; rho_B; -1 ...
            else ...
                p_avg; p_avg; T_avg; rho_avg; 0 ...
            end;

        % Exponents involving gamma in equations
        gamma1 = (gamma - 1)/gamma;
        gamma2 = 2/gamma;
        gamma3 = 2*(gamma - 2)/gamma;

        % Critical pressure ratio
        B_crit = (2/(gamma + 1))^(1/gamma1);

        % Orifice area ratio
        area_ratio = orifice_area / area;

        % Non-dimensionalize pressure to handle non-integer exponent gamma
        p_A_unit   =       p_A  /p_unit;
        p_B_unit   =       p_B  /p_unit;
        p_avg_unit = neabs(p_avg/p_unit);
        p_in_unit  = neabs(p_in /p_unit);
        p_out_unit = neabs(p_out/p_unit);
    end

    intermediates
        % Mass flow rate from port A to port B assuming no choke
        mdot_unchoked = Cd * orifice_area * sqrt(2*p_unit/gamma1) * (p_A_unit^gamma1 - p_B_unit^gamma1) ...
            / ((p_in_unit/p_out_unit^2)^gamma2 / rho_in^2 * (1 - area_ratio^2 * (p_out_unit/p_in_unit)^gamma2)^2 * (p_A_unit^gamma1 - p_B_unit^gamma1)^2 ...
            + p_avg_unit^gamma3 / rho_avg^2 * (1/B_lam^gamma2 - area_ratio^2)^2 * (1 - B_lam^gamma1)^2)^0.25;

        % Choked mass flow rate (always positive)
        mdot_choked = Cd * orifice_area * sqrt(2*p_unit/gamma1) * p_in_unit^gamma1 * (gamma - 1) / (gamma + 1) ...
            / (p_in_unit^gamma3 / rho_in^2 * (((gamma + 1)/2)^(2/(gamma-1)) - area_ratio^2)^2 * (gamma - 1)^2 / (gamma + 1)^2 ...
            + p_avg_unit^gamma3 / rho_avg^2 * (1/B_lam^gamma2 - area_ratio^2)^2 * (1 - B_lam^gamma1)^2)^0.25;
    end

    equations
        % Mass flow rate through orifice
        mdot_A == ...
            if ge(p_out/p_in, B_crit), ...
                if le(dir*mdot_unchoked, mdot_choked), ...
                    mdot_unchoked ...
                else ...
                    dir*mdot_choked ...
                end ...
            else ...
                dir*mdot_choked ...
            end;

        % Mass balance
        mdot_A + mdot_B == 0;

        % Energy balance
        Phi_A + Phi_B == 0;
    end
end